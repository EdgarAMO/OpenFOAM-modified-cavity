/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{
    // movingWall
    // {
    //  type            fixedValue;
    //  value           uniform (1 0 0);
    // }

    movingWall
    {
        type            codedFixedValue;
        value           uniform (0 0 0);
        
        redirectType    oscillator;

        codeOptions
        #{
            -I$(LIB_SRC)/finiteVolume/lnInclude \
            -I$(LIB_SRC)/meshTools/lnInclude
        #};

        codeInclude
        #{
            #include "fvCFD.H"
            #include <cmath>
            #include <iostream>
        #};

        code
        #{
            const fvPatch& boundaryPatch = patch();
            const vectorField& Cf = boundaryPatch.Cf();
            vectorField& field = *this;

            scalar t = this->db().time().value();
            scalar U0 = 1.0;
            scalar pi = constant::mathematical::pi;
            scalar freq = 2.0 * pi;

            forAll (Cf, faceI)
            {
                field[faceI] = vector(U0 * sin(freq * t), 0, 0);
            }
        #};
    }

    fixedWalls
    {
        type            noSlip;
    }
}

// ************************************************************************* //
